package practice;

import java.util.ArrayList;
import java.util.List;

public class Recursion {

	public static void main(String[] args) {
		//재귀함수
		
		
		// 단순  출력  1번
		//Recursion();
		// 단순  출력  2번
		//Recursion(10);
		
		
//		// Factorial
//		System.out.println("Factorial  (재귀o): " + Factorial(5));
//		System.out.println("Factorial2 (재귀x): " + Factorial2(5));
		
		
//		// Fibonacci
//		System.out.println("Fibonacci1   (재귀o): " + Fibonacci1(7));
//		System.out.println("Fibonacci2   (재귀x): " + Fibonacci2(100));
		
		
		
//		// 최대공약수(유클리드 호제법)
//		System.out.println("gcd1  (재귀o) : " + gcd1(128, 100));
//		System.out.println("gcd2  (재귀x) : " + gcd2(128, 100));
//		
//		System.out.println("gcd1  (재귀o) : " + gcd1(144, 90));
//		System.out.println("gcd2  (재귀x) : " + gcd2(144, 90));
	}

	
//	public static int gcd1(int a, int b) {
//		if(a % b == 0) return b;
//
//		return gcd1(b, a % b);
//
//	}
//	
//	public static int gcd2(int a, int b) {
//		int tmp = 0;
//		int min = Math.min(a, b);
//		int max = Math.max(a, b);
//		for(int i = min; i > 0; i--) {
//			if(a % i == 0 && b % i == 0) {
//				tmp = i;
//				break;
//			}
//		}
//		
//		return tmp;
//	}
	
	
	
	
	
	
	
//	public static int Fibonacci1(int k) {
//		if(k == 0) return 0;
//		else if (k == 1) return 1;
//		
//		return Fibonacci1(k-2) + Fibonacci1(k-1);
//	}
//	
//	
//	public static int Fibonacci2(int k) {
//		List<Integer> Fibo = new ArrayList<>();
//		for(int i = 0 ; i <= k; i++) {
//			if(i == 0) {
//				Fibo.add(0);
//			} else if(i == 1) {
//				Fibo.add(1);
//			} else {
//				Fibo.add(Fibo.get(i-2) + Fibo.get(i-1));
//			}
//			System.out.print(Fibo.get(i) + ", ");
//		}
//		
//		int answer = Fibo.get(k);
//		
//		return answer;
//	}
//	
	
	
	
//	// Factorial
//	public static int Factorial(int k) {
//		if(k == 1) {
//			return 1;
//		}
//		System.out.println(k + "번째 재귀");
//		return k * Factorial(k-1);		
//	}
//	
//	public static int Factorial2(int k) {
//		int tmp = 1;
//		for(int i = 1; i <= k; i++) {
//			tmp *= i;
//		}
//		
//		return tmp;
//	}

	
	
	
//	// 단순 출력
//	public static void Recursion() {
//		System.out.println("hello");
//		Recursion();
//	}
//	
//	public static void Recursion(int k) {
//		if(k <= 0) return; 
//		System.out.println("hello");
//		Recursion(k-1);
//	}
	
	
}
