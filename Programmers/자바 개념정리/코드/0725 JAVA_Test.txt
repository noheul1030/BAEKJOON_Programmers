<1번>

public static void main(String[] args){
		student_grade[] arr_A = new student_grade[10];
		for(int i = 1; i < 11; i++){
			student_grade stg = new student_grade();
			stg.setId(i + 100);
			stg.setName("홍길" + i);
			stg.setKor((int)(Math.random() * 100) + 1);
			stg.setEng((int)(Math.random() * 100) + 1);
			stg.setMat((int)(Math.random() * 100) + 1);
			stg.setSum(stg.getEng()+stg.getKor()+stg.getMat());
			arr_A[i-1] = stg;
		}
		
		student_grade[] arr_B = new student_grade[10];
		for(int i = 11; i < 21; i++){
			student_grade stg = new student_grade();
			stg.setId(i + 100);
			stg.setName("홍길" + i);
			stg.setKor((int)(Math.random() * 100) + 1);
			stg.setEng((int)(Math.random() * 100) + 1);
			stg.setMat((int)(Math.random() * 100) + 1);
			stg.setSum(stg.getEng()+stg.getKor()+stg.getMat());
			arr_B[i-11] = stg;
		}

		BubbleSort(arr_A);
		BubbleSort(arr_B);
		System.out.println("A Bubble Sort");
		for(int i = 0; i < arr_A.length; i++) {
			System.out.print("id : " + arr_A[i].getId());
			System.out.print("   Name : " + arr_A[i].getName());
			System.out.print("   Sum  : " + arr_A[i].getSum());
			System.out.println();
		}
		System.out.println("B Bubble Sort");
		for(int i = 0; i < arr_B.length; i++) {
			System.out.print("id : " + arr_B[i].getId());
			System.out.print("   Name : " + arr_B[i].getName());
			System.out.print("   Sum  : " + arr_B[i].getSum());
			System.out.println();
		}

		student_grade[] arr_sum = new student_grade[20];
		Mergesort(arr_A,arr_B, arr_sum);
		System.out.println("Merge Sort");
		for(int i = 0; i < arr_sum.length; i++) {
			System.out.print("id : " + arr_sum[i].getId());
			System.out.print("   Name : " + arr_sum[i].getName());
			System.out.print("   Sum  : " + arr_sum[i].getSum());
			System.out.println();
		}		
		
		


	}
	public static void Mergesort(student_grade[] arr_A, student_grade[] arr_B, student_grade[] arr_Sum) {
		int cntA = 0;
		int cntB = 0;
		for(int i = 0; i < arr_Sum.length; i++) {
			if(cntA < 10 && cntB < 10) {
				if(arr_A[cntA].getSum() >= arr_B[cntB].getSum()) {
					arr_Sum[i] = arr_A[cntA];
					cntA++;
				} else if(arr_B[cntB].getSum() > arr_A[cntA].getSum()) {
					arr_Sum[i] = arr_B[cntB];
					cntB++;
				}
			} else if (cntA >= 10 && cntB < 10) {
				arr_Sum[i] = arr_B[cntB];
				cntB++;
			} else if(cntA < 10 && cntB >= 10) {
				arr_Sum[i] = arr_A[cntA];
				cntA++;
			} 
		}
	}


	public static void BubbleSort(student_grade[] arr){
		for(int i = 0; i < arr.length; i++){
			for(int j = 0; j < arr.length - i -1; j++){
				if(arr[j].getSum() < arr[j+1].getSum()){
					swap(j, j+1, arr);
				}
			}
		}

	}


	public static void swap(int idx1, int idx2, student_grade[] arr){
		student_grade tmp = arr[idx1];
		arr[idx1] = arr[idx2];
		arr[idx2] = tmp;
	}







/////////////////////
public class student_grade {
	private int id;
	private String name;
	private int kor;
	private int eng;
	private int mat;
	private int sum;
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getKor() {
		return kor;
	}
	public void setKor(int kor) {
		this.kor = kor;
	}
	public int getEng() {
		return eng;
	}
	public void setEng(int eng) {
		this.eng = eng;
	}
	public int getMat() {
		return mat;
	}
	public void setMat(int mat) {
		this.mat = mat;
	}
	public int getSum() {
		return sum;
	}
	public void setSum(int sum) {
		this.sum = sum;
	}
	
	
}











<2번>

public static void main(String[] args){
	
	System.out.println(calculateCombination(6,3));
	System.out.println(calculateCombination(10,2));
	System.out.println(calculateCombination(20,3));
}

public static int calculateCombination(int n, int r){
	
	return (Factorial(n) / Factorial(n-r))/Factorial(r);
}

public static int Factorial(int k){
	if(k == 1) return 1;
	
	return k * Factorial(k-1);
}









<3번>
public static void main(String[] args){
		int grade = 88;
		int[] a = new int[1001];
		for(int i = 0; i < a.length - 1; i++){
			a[i] = (int) (Math.random() * 100 + 1);
		}
		Arrays.sort(a);
		BinarySearch(a, 0, a.length - 1, grade);
		System.out.println(Arrays.toString(a));

	}


	public static void BinarySearch(int[] arr,int s, int e, int k){
		int tmp = (s + e) / 2;
		if(arr[tmp] == k || tmp == s){
			System.out.println(tmp + 1 + "번째 항목입니다");
			Array_sort(arr, tmp, k);
			return;
		}
		if(arr[tmp] < k){
			BinarySearch(arr, tmp + 1, e, k);
		} else{
			BinarySearch(arr, 0, tmp, k);
		}
		
	}

	public static void Array_sort(int[] arr, int idx, int k){
		int tmp = k;
		int tmp2 = 0;
		for(int i = idx; i < arr.length -1; i++){
			tmp2 = arr[i];
			arr[i] = tmp;
			tmp = tmp2;
		}
	}
